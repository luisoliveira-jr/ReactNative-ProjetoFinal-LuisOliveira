{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Dev area\\\\React Native\\\\ProjetoFinal-LuisOliveira\\\\componentes\\\\Cadastro.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport validator from 'validator';\n\nvar Cadastro = function (_React$Component) {\n  _inherits(Cadastro, _React$Component);\n\n  var _super = _createSuper(Cadastro);\n\n  function Cadastro(props) {\n    var _this;\n\n    _classCallCheck(this, Cadastro);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      senha: '',\n      mensagem: null,\n      erros: []\n    };\n    _this.onCadastrarPress = _this.onCadastrarPress.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Cadastro, [{\n    key: \"validarFormulario\",\n    value: function validarFormulario() {\n      var erros = [];\n\n      if (!this.state.email) {\n        erros.push('O email não pode ficar em branco');\n      }\n\n      if (!validator.isEmail(this.state.email)) {\n        erros.push('O formato do email está inválido');\n      }\n\n      if (!this.state.senha) {\n        erros.push('A senha não pode ficar em branco');\n      }\n\n      if (this.state.senha.length < 6) {\n        erros.push('A senha deve ter no mínimo 6 caracteres');\n      }\n\n      return erros;\n    }\n  }, {\n    key: \"onCadastrarPress\",\n    value: function onCadastrarPress() {\n      var _this2 = this;\n\n      this.setState({\n        mensagem: '',\n        erros: []\n      }, function () {\n        var erros = _this2.validarFormulario();\n\n        if (erros.length > 0) {\n          _this2.setState({\n            erros: erros\n          });\n\n          return;\n        }\n\n        _this2.setState({\n          mensagem: 'Muito obrigado por se cadastrar! Verique o seu email para os próximos passos',\n          email: '',\n          senha: ''\n        });\n      });\n    }\n  }, {\n    key: \"renderErros\",\n    value: function renderErros() {\n      var _this3 = this;\n\n      if (this.state.erros.length > 0) {\n        var listaDeErros = this.state.erros.map(function (erro, index) {\n          return React.createElement(Text, {\n            key: index,\n            style: {\n              color: 'red',\n              fontSize: 18\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 9\n            }\n          }, \"* \", erro);\n        });\n        return React.createElement(View, {\n          style: {\n            alignItems: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: 'red',\n            fontSize: 18\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }\n        }, \"O seu cadastro falhou:\"), listaDeErros);\n      }\n    }\n  }, {\n    key: \"renderMensagem\",\n    value: function renderMensagem() {\n      if (this.state.mensagem) {\n        return React.createElement(Text, {\n          style: {\n            alignSelf: 'center',\n            color: 'green',\n            fontSize: 18\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }\n        }, this.state.mensagem);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'space-between'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.titleContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, \"Nova Conta\")), React.createElement(View, {\n        style: styles.inputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.inputText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, \"Email\"), React.createElement(TextInput, {\n        style: styles.textInput,\n        underlineColorAndroid: \"rgba(0, 0, 0, 0)\",\n        value: this.state.email,\n        onChangeText: function onChangeText(text) {\n          return _this4.setState({\n            email: text\n          });\n        },\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.inputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.inputText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, \"Senha\"), React.createElement(TextInput, {\n        style: styles.textInput,\n        underlineColorAndroid: \"rgba(0, 0, 0, 0)\",\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        secureTextEntry: true,\n        value: this.state.senha,\n        onChangeText: function onChangeText(text) {\n          return _this4.setState({\n            senha: text\n          });\n        },\n        maxLength: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: {\n          padding: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        title: \"Cadastrar\",\n        onPress: this.onCadastrarPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }))), this.renderErros(), this.renderMensagem());\n    }\n  }]);\n\n  return Cadastro;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  titleContainer: {\n    backgroundColor: 'rgb(130, 149, 174)',\n    height: 60,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  titleText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  inputText: {\n    flex: 1,\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  textInput: {\n    flex: 3,\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 4,\n    padding: 8\n  }\n});","map":{"version":3,"sources":["C:/Dev area/React Native/ProjetoFinal-LuisOliveira/componentes/Cadastro.js"],"names":["React","validator","Cadastro","props","state","email","senha","mensagem","erros","onCadastrarPress","bind","push","isEmail","length","setState","validarFormulario","listaDeErros","map","erro","index","color","fontSize","alignItems","alignSelf","flex","justifyContent","styles","titleContainer","titleText","inputContainer","inputText","textInput","text","padding","renderErros","renderMensagem","Component","StyleSheet","create","backgroundColor","height","fontWeight","flexDirection","borderWidth","borderColor","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, TextInput, Button } from 'react-native';\r\nimport validator from 'validator';\r\n\r\nclass Cadastro extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: '',\r\n      senha: '',\r\n      mensagem: null,\r\n      erros: [],\r\n    };\r\n\r\n    this.onCadastrarPress = this.onCadastrarPress.bind(this);\r\n  }\r\n\r\n  validarFormulario() {\r\n    const erros = [];\r\n\r\n    if (!this.state.email) {\r\n      erros.push('O email não pode ficar em branco');\r\n    }\r\n    if (!validator.isEmail(this.state.email)) {\r\n      erros.push('O formato do email está inválido');\r\n    }\r\n    if (!this.state.senha) {\r\n      erros.push('A senha não pode ficar em branco');\r\n    }\r\n    if (this.state.senha.length < 6) {\r\n      erros.push('A senha deve ter no mínimo 6 caracteres');\r\n    }\r\n\r\n    return erros;\r\n  }\r\n\r\n  onCadastrarPress() {\r\n    this.setState({ mensagem: '', erros: [] }, () => {\r\n      const erros = this.validarFormulario();\r\n\r\n      if (erros.length > 0) {\r\n        this.setState({ erros });\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        mensagem: 'Muito obrigado por se cadastrar! Verique o seu email para os próximos passos',\r\n        email: '',\r\n        senha: '',\r\n      });\r\n    });\r\n  }\r\n\r\n  renderErros() {\r\n    if (this.state.erros.length > 0) {\r\n      const listaDeErros = this.state.erros.map((erro, index) =>\r\n        <Text key={index} style={{ color: 'red', fontSize: 18 }}>* {erro}</Text>\r\n      );\r\n\r\n      return (\r\n        <View style={{ alignItems: 'center' }}>\r\n          <Text style={{ color: 'red', fontSize: 18 }}>O seu cadastro falhou:</Text>\r\n          {listaDeErros}\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderMensagem() {\r\n    if (this.state.mensagem) {\r\n      return (\r\n        <Text style={{ alignSelf: 'center', color: 'green', fontSize: 18 }}>{this.state.mensagem}</Text>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'space-between' }}>\r\n        <View>\r\n          <View style={styles.titleContainer}>\r\n            <Text style={styles.titleText}>Nova Conta</Text>\r\n          </View>\r\n\r\n          <View style={styles.inputContainer}>\r\n            <Text style={styles.inputText}>Email</Text>\r\n            <TextInput\r\n              style={styles.textInput}\r\n              underlineColorAndroid=\"rgba(0, 0, 0, 0)\"\r\n              value={this.state.email}\r\n              onChangeText={(text) => this.setState({ email: text })}\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n            />\r\n          </View>\r\n\r\n          <View style={styles.inputContainer}>\r\n            <Text style={styles.inputText}>Senha</Text>\r\n            <TextInput\r\n              style={styles.textInput}\r\n              underlineColorAndroid=\"rgba(0, 0, 0, 0)\"\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n              secureTextEntry\r\n              value={this.state.senha}\r\n              onChangeText={(text) => this.setState({ senha: text })}\r\n              maxLength={15}\r\n            />\r\n          </View>\r\n\r\n          <View style={{ padding: 8 }}>\r\n            <Button\r\n              title=\"Cadastrar\"\r\n              onPress={this.onCadastrarPress}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {this.renderErros()}\r\n        {this.renderMensagem()}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  titleContainer: {\r\n    backgroundColor: 'rgb(130, 149, 174)',\r\n    height: 60,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  titleText: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 8,\r\n  },\r\n  inputText: {\r\n    flex: 1,\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n  textInput: {\r\n    flex: 3,\r\n    borderWidth: 1,\r\n    borderColor: 'gray',\r\n    borderRadius: 4,\r\n    padding: 8,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}